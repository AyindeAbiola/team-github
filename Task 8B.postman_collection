{
	"info": {
		"_postman_id": "c40b1202-a244-4e42-894a-03bed72ee1a3",
		"name": "Swagger Petstore",
		"description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n\nContact Support:\n Email: apiteam@swagger.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24809150"
	},
	"item": [
		{
			"name": "pet",
			"item": [
				{
					"name": "{petId}",
					"item": [
						{
							"name": "GET Request",
							"item": [
								{
									"name": "Find pet by ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"\r",
													"/** verify that status code is 404 since we are unable to fetch pet by ID due to the unstability of datas provided */\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"// verify that type has an \"error\" string name.\r",
													"var response = JSON.parse(responseBody);\r",
													"tests[\"verify that 'type' has 'error' as a string name\"] = response.type == \"error\"\r",
													"\r",
													"// verify that code has a value of 1.\r",
													"var response = JSON.parse(responseBody);\r",
													"tests[\"verify that 'code' has a value of 1\"] = response.code == 1\r",
													"\r",
													"\r",
													"// verify that type has an \"error\" string name.\r",
													"var response = JSON.parse(responseBody);\r",
													"tests[\"verify that type message 'Pet not found' is present as a string\"] = response.message == \"Pet not found\"\r",
													"\r",
													"// Set an environment variable for \"code\"\r",
													"var response = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"code\", response.code);\r",
													"\r",
													"// Set an environment variable for \"type\"\r",
													"var response = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable (\"type\" , response.type);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId",
													"value": "16621634",
													"description": "(Required) ID of pet to return"
												}
											]
										},
										"description": "Returns a single pet"
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api_key",
														"value": "<API Key>"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "// Get pet \"commodo\" through ID under Tags\"\r\nvar response = JSON.parse(responseBody);\r\ntests[\"verify that commodo pet is gotten through ID\"] = response.id[0] == 73824823\r\n\r\n/** Comment:\r\n1. 'Successful Operation API' is not stable.\r\n2. When Tester troubleshoots, the IDs and Names disappers and displays an entire different content.\r\n3. Tester could not parse response body into a variable.\r\n4. All codes written are not processed.\r\n/*\r\n\r\nPossible Solution(s):\r\nThe backend developer should either modify or rework the tables of the database system.",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/pet/:petId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId"
													],
													"variable": [
														{
															"key": "petId",
															"value": "16621634",
															"description": "(Required) ID of pet to return"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"non exercitation elit\",\n    \"aliquip irure cillum eu\"\n  ],\n  \"id\": -5461026,\n  \"category\": {\n    \"id\": -5214169,\n    \"name\": \"dolor consequat Lorem\"\n  },\n  \"tags\": [\n    {\n      \"id\": 97975597,\n      \"name\": \"dolore qui\"\n    },\n    {\n      \"id\": 73824823,\n      \"name\": \"commodo\"\n    }\n  ],\n  \"status\": \"sold\"\n}"
										},
										{
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api_key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/:petId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId"
													],
													"variable": [
														{
															"key": "petId",
															"value": "16621634",
															"description": "(Required) ID of pet to return"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Pet not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api_key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/:petId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId"
													],
													"variable": [
														{
															"key": "petId",
															"value": "16621634",
															"description": "(Required) ID of pet to return"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Find Pets by status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"// verify that status code is 200\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// verify that the body matches string\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"});\r",
													"//\r",
													"\r",
													"// Confirm the status of id: 9223372036854248006\r",
													"var response = JSON.parse(responseBody);\r",
													"tests[\"id 92233720368542488449 is available\"] = response[0].status == \"available\"\r",
													"\r",
													"// Confirm the status of id: 9223372036854248006\r",
													"var response = JSON.parse(responseBody);\r",
													"tests[\"id 9223372036854249388 is available\"] = response[1].status == \"available\"\r",
													"\r",
													"// Confirm the status of id: 9223372036854248006\r",
													"var response = JSON.parse(responseBody);\r",
													"tests[\"id 9223372036854249390 is available\"] = response[2].status == \"available\"\r",
													"\r",
													"// Set an environment variable for \"type\"\r",
													"var response = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable (\"id\" , response.name[0].name);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"key": "status",
													"value": "available"
												},
												{
													"key": "status",
													"value": "available"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Finds Pets by tags",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByTags?tags=ut veniam qui aute&tags=nostrud mollit adipisicing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByTags"
											],
											"query": [
												{
													"key": "tags",
													"value": "ut veniam qui aute",
													"description": "(Required) Tags to filter by"
												},
												{
													"key": "tags",
													"value": "nostrud mollit adipisicing",
													"description": "(Required) Tags to filter by"
												}
											]
										},
										"description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "// Confirm the status of id: 9223372036854248006\r\n\r\nvar response = JSON.parse(responseBody);\r\ntests[\"get tag from object 1 under an Array\"] = response[1].tags == \"id, name\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/pet/findByTags?tags=sit enim aliqua&tags=est adipisicing fugiat pariatur",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														"findByTags"
													],
													"query": [
														{
															"key": "tags",
															"value": "sit enim aliqua"
														},
														{
															"key": "tags",
															"value": "est adipisicing fugiat pariatur"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"occaecat id\",\n      \"dolor cillum occaecat\"\n    ],\n    \"id\": 9445666,\n    \"category\": {\n      \"id\": 75396266,\n      \"name\": \"adipi\"\n    },\n    \"tags\": [\n      {\n        \"id\": -34724564,\n        \"name\": \"laborum in cupidatat incididunt velit\"\n      },\n      {\n        \"id\": -80082209,\n        \"name\": \"aliquip aute pariatur do\"\n      }\n    ],\n    \"status\": \"available\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"consectetur dolore\",\n      \"do velit veniam anim id\"\n    ],\n    \"id\": -96447378,\n    \"category\": {\n      \"id\": -39159736,\n      \"name\": \"pariatur eiusmod dolore\"\n    },\n    \"tags\": [\n      {\n        \"id\": 38198828,\n        \"name\": \"proident c\"\n      },\n      {\n        \"id\": -14878656,\n        \"name\": \"commodo velit adipisicing\"\n      }\n    ],\n    \"status\": \"pending\"\n  }\n]"
										},
										{
											"name": "Invalid tag value",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/findByTags?tags=sit enim aliqua&tags=est adipisicing fugiat pariatur",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														"findByTags"
													],
													"query": [
														{
															"key": "tags",
															"value": "sit enim aliqua"
														},
														{
															"key": "tags",
															"value": "est adipisicing fugiat pariatur"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "POST Request",
							"item": [
								{
									"name": "Updates a pet in the store with form data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "sed esse sit",
													"description": "Updated name of the pet"
												},
												{
													"key": "status",
													"value": "incididunt veniam cillum",
													"description": "Updated status of the pet"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId",
													"value": "16621634",
													"description": "(Required) ID of pet that needs to be updated"
												}
											]
										}
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "name",
															"value": "sed esse sit",
															"description": "Updated name of the pet"
														},
														{
															"key": "status",
															"value": "incididunt veniam cillum",
															"description": "Updated status of the pet"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/pet/:petId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId"
													],
													"variable": [
														{
															"key": "petId",
															"value": "16621634",
															"description": "(Required) ID of pet that needs to be updated"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "uploads an image",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//\r",
													"\r",
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "additionalMetadata",
													"value": "occaecat",
													"description": "Additional data to pass to server",
													"type": "text"
												},
												{
													"key": "file",
													"description": "file to upload",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId/uploadImage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId",
												"uploadImage"
											],
											"variable": [
												{
													"key": "petId",
													"value": "16621634",
													"description": "(Required) ID of pet to update"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "additionalMetadata",
															"value": "occaecat",
															"description": "Additional data to pass to server",
															"type": "text"
														},
														{
															"key": "file",
															"description": "file to upload",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/pet/:petId/uploadImage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId",
														"uploadImage"
													],
													"variable": [
														{
															"key": "petId",
															"value": "16621634",
															"description": "(Required) ID of pet to update"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": -66155269,\n  \"type\": \"eiusmod\",\n  \"message\": \"minim anim aliqua et\"\n}"
										}
									]
								},
								{
									"name": "Add a new pet to the store",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Successful POST request\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"nulla pariatur\",\n    \"do et\"\n  ],\n  \"id\": -95113707,\n  \"category\": {\n    \"id\": -94395266,\n    \"name\": \"ipsum Lorem minim ullamco\"\n  },\n  \"tags\": [\n    {\n      \"id\": 98595006,\n      \"name\": \"aliqua dolore in ex cupidatat\"\n    },\n    {\n      \"id\": -66200871,\n      \"name\": \"ullamco\"\n    }\n  ],\n  \"status\": \"sold\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet"
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "DEL Request",
							"item": [
								{
									"name": "Deletes a pet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "officia ea irure culpa"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId",
													"value": "16621634",
													"description": "(Required) Pet id to delete"
												}
											]
										}
									},
									"response": [
										{
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"key": "api_key",
														"value": "officia ea irure culpa"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/:petId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId"
													],
													"variable": [
														{
															"key": "petId",
															"value": "16621634",
															"description": "(Required) Pet id to delete"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Pet not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"key": "api_key",
														"value": "officia ea irure culpa"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/:petId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId"
													],
													"variable": [
														{
															"key": "petId",
															"value": "16621634",
															"description": "(Required) Pet id to delete"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "PUT Request",
							"item": [
								{
									"name": "Update an existing pet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response time is less than 300ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
													"});\r",
													"\r",
													"//\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"non exercitation elit\",\n    \"aliquip irure cillum eu\"\n  ],\n  \"id\": -5461026,\n  \"category\": {\n    \"id\": -5214169,\n    \"name\": \"dolor consequat Lorem\"\n  },\n  \"tags\": [\n    {\n      \"id\": 97975597,\n      \"name\": \"dolore qui\"\n    },\n    {\n      \"id\": 73824823,\n      \"name\": \"commodo\"\n    }\n  ],\n  \"status\": \"sold\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"response": [
										{
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Pet not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation exception",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet"
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "store",
			"item": [
				{
					"name": "order",
					"item": [
						{
							"name": "{orderId}",
							"item": [
								{
									"name": "GET Request",
									"item": [
										{
											"name": "Returns pet inventories by status",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"\r",
															"// Confirm if 'Error' has the value of 1\r",
															"var response = JSON.parse(responseBody);\r",
															"tests[\"the value of available is 175\"] = response.available == 175"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "key",
															"value": "api_key",
															"type": "string"
														},
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "in",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/store/inventory",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"inventory"
													]
												},
												"description": "Returns a map of status codes to quantities"
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "api_key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/store/inventory",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"store",
																"inventory"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"occaecat05\": -44817012,\n  \"utf\": -21391901,\n  \"exercitation_86\": -89110071\n}"
												}
											]
										},
										{
											"name": "Find purchase order by ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"//verify that Status code is 404 Not Found, reason being that ID Key and Value are not present in the response body, hence invalid request.\r",
															"pm.test(\"Status code is 404\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															"\r",
															"//\r",
															"\r",
															"pm.test(\"Content-Type is present\", function () {\r",
															"    pm.response.to.have.header(\"Content-Type\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId",
															"value": "2",
															"description": "(Required) ID of pet that needs to be fetched"
														}
													]
												},
												"description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/store/order/:orderId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"store",
																"order",
																":orderId"
															],
															"variable": [
																{
																	"key": "orderId",
																	"value": "2",
																	"description": "(Required) ID of pet that needs to be fetched"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": -51761666,\n  \"petId\": 98072155,\n  \"quantity\": -38365382,\n  \"shipDate\": \"2001-11-02T18:16:54.203Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}"
												},
												{
													"name": "Invalid ID supplied",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/store/order/:orderId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"store",
																"order",
																":orderId"
															],
															"variable": [
																{
																	"key": "orderId",
																	"value": "2",
																	"description": "(Required) ID of pet that needs to be fetched"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Order not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/store/order/:orderId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"store",
																"order",
																":orderId"
															],
															"variable": [
																{
																	"key": "orderId",
																	"value": "2",
																	"description": "(Required) ID of pet that needs to be fetched"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "POST Request",
									"item": [
										{
											"name": "Place an order for a pet",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"//\r",
															"\r",
															"pm.test(\"Successful POST request\", function () {\r",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": -51761666,\n  \"petId\": 98072155,\n  \"quantity\": -38365382,\n  \"shipDate\": \"2001-11-02T18:16:54.203Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/store/order",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order"
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": -51761666,\n  \"petId\": 98072155,\n  \"quantity\": -38365382,\n  \"shipDate\": \"2001-11-02T18:16:54.203Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/store/order",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"store",
																"order"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": -51761666,\n  \"petId\": 98072155,\n  \"quantity\": -38365382,\n  \"shipDate\": \"2001-11-02T18:16:54.203Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}"
												},
												{
													"name": "Invalid Order",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": -51761666,\n  \"petId\": 98072155,\n  \"quantity\": -38365382,\n  \"shipDate\": \"2001-11-02T18:16:54.203Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/store/order",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"store",
																"order"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "DEL Request",
									"item": [
										{
											"name": "Delete purchase order by ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 404\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															"\r",
															"//\r",
															"\r",
															"pm.test(\"Body matches string\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"message\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId",
															"value": "28890553",
															"description": "(Required) ID of the order that needs to be deleted"
														}
													]
												},
												"description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors"
											},
											"response": [
												{
													"name": "Invalid ID supplied",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/store/order/:orderId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"store",
																"order",
																":orderId"
															],
															"variable": [
																{
																	"key": "orderId",
																	"value": "28890553",
																	"description": "(Required) ID of the order that needs to be deleted"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Order not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/store/order/:orderId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"store",
																"order",
																":orderId"
															],
															"variable": [
																{
																	"key": "orderId",
																	"value": "28890553",
																	"description": "(Required) ID of the order that needs to be deleted"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "{username}",
					"item": [
						{
							"name": "GET Request",
							"item": [
								{
									"name": "Get user by user name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "officia ea irure culpa",
													"description": "(Required) The name that needs to be fetched. Use user1 for testing. "
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/user/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":username"
													],
													"variable": [
														{
															"key": "username",
															"value": "officia ea irure culpa",
															"description": "(Required) The name that needs to be fetched. Use user1 for testing. "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 89814121,\n  \"username\": \"ut sed nostrud veniam\",\n  \"firstName\": \"laboris reprehenderit\",\n  \"lastName\": \"id dolor quis ea\",\n  \"email\": \"anim ea\",\n  \"password\": \"dolor dolore officia\",\n  \"phone\": \"ullamco esse id\",\n  \"userStatus\": 29368091\n}"
										},
										{
											"name": "Invalid username supplied",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/user/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":username"
													],
													"variable": [
														{
															"key": "username",
															"value": "officia ea irure culpa",
															"description": "(Required) The name that needs to be fetched. Use user1 for testing. "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/user/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":username"
													],
													"variable": [
														{
															"key": "username",
															"value": "officia ea irure culpa",
															"description": "(Required) The name that needs to be fetched. Use user1 for testing. "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Logs user into the system",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/login?username=officia ea irure culpa&password=officia ea irure culpa",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"login"
											],
											"query": [
												{
													"key": "username",
													"value": "officia ea irure culpa",
													"description": "(Required) The user name for login"
												},
												{
													"key": "password",
													"value": "officia ea irure culpa",
													"description": "(Required) The password for login in clear text"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/user/login?username=officia ea irure culpa&password=officia ea irure culpa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"login"
													],
													"query": [
														{
															"key": "username",
															"value": "officia ea irure culpa"
														},
														{
															"key": "password",
															"value": "officia ea irure culpa"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Expires-After",
													"value": "1979-10-19T06:50:12.214Z",
													"description": "date in UTC when token expires"
												},
												{
													"key": "X-Rate-Limit",
													"value": "-91446957",
													"description": "calls per hour allowed by the user"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"officia ea irure culpa\""
										},
										{
											"name": "Invalid username/password supplied",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/user/login?username=officia ea irure culpa&password=officia ea irure culpa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"login"
													],
													"query": [
														{
															"key": "username",
															"value": "officia ea irure culpa"
														},
														{
															"key": "password",
															"value": "officia ea irure culpa"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Logs out current logged in user session",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"logout"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/user/logout",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"logout"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "POST Request",
							"item": [
								{
									"name": "Create user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200, 201\", function () {\r",
													"    pm.response.to.have.status(200, 201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 89814121,\n  \"username\": \"ut sed nostrud veniam\",\n  \"firstName\": \"laboris reprehenderit\",\n  \"lastName\": \"id dolor quis ea\",\n  \"email\": \"anim ea\",\n  \"password\": \"dolor dolore officia\",\n  \"phone\": \"ullamco esse id\",\n  \"userStatus\": 29368091\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user"
											]
										},
										"description": "This can only be done by the logged in user."
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 89814121,\n  \"username\": \"ut sed nostrud veniam\",\n  \"firstName\": \"laboris reprehenderit\",\n  \"lastName\": \"id dolor quis ea\",\n  \"email\": \"anim ea\",\n  \"password\": \"dolor dolore officia\",\n  \"phone\": \"ullamco esse id\",\n  \"userStatus\": 29368091\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates list of users with given input array",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200 - 201\", function () {\r",
													"    pm.response.to.have.status(200, 201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": 22754285,\n    \"username\": \"ex minim Lorem labore qui\",\n    \"firstName\": \"Ut in\",\n    \"lastName\": \"enim dol\",\n    \"email\": \"do\",\n    \"password\": \"ut velit culpa Duis\",\n    \"phone\": \"occaecat esse\",\n    \"userStatus\": 11173532\n  },\n  {\n    \"id\": 89576689,\n    \"username\": \"culpa magna dolor pariatur\",\n    \"firstName\": \"ex adipisicing\",\n    \"lastName\": \"sint magna Excepteur\",\n    \"email\": \"ex qui occaecat consequat\",\n    \"password\": \"sunt eiusmod\",\n    \"phone\": \"Ut exercitation est do\",\n    \"userStatus\": -40641716\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/createWithArray",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"createWithArray"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/user/createWithArray",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"createWithArray"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates list of users with given input array",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200 - 201\", function () {\r",
													"    pm.response.to.have.status(200, 201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": -80111895,\n    \"username\": \"incididunt ut magna ex\",\n    \"firstName\": \"dolore veniam et\",\n    \"lastName\": \"Ut anim cupidatat in deserunt\",\n    \"email\": \"Excepteur consectetur labore\",\n    \"password\": \"eu consectetur consequat\",\n    \"phone\": \"n\",\n    \"userStatus\": 5358205\n  },\n  {\n    \"id\": 2071151,\n    \"username\": \"esse proident ea\",\n    \"firstName\": \"culpa dolor irure anim\",\n    \"lastName\": \"incididunt id laborum sed\",\n    \"email\": \"elit amet magna\",\n    \"password\": \"ut sit consequat\",\n    \"phone\": \"Duis consectetur deserunt sunt\",\n    \"userStatus\": 21132208\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/createWithList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"createWithList"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/user/createWithList",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														"createWithList"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "PUT Request",
							"item": [
								{
									"name": "Updated user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 89814121,\n  \"username\": \"ut sed nostrud veniam\",\n  \"firstName\": \"laboris reprehenderit\",\n  \"lastName\": \"id dolor quis ea\",\n  \"email\": \"anim ea\",\n  \"password\": \"dolor dolore officia\",\n  \"phone\": \"ullamco esse id\",\n  \"userStatus\": 29368091\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "officia ea irure culpa",
													"description": "(Required) name that need to be updated"
												}
											]
										},
										"description": "This can only be done by the logged in user."
									},
									"response": [
										{
											"name": "Invalid user supplied",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 89814121,\n  \"username\": \"ut sed nostrud veniam\",\n  \"firstName\": \"laboris reprehenderit\",\n  \"lastName\": \"id dolor quis ea\",\n  \"email\": \"anim ea\",\n  \"password\": \"dolor dolore officia\",\n  \"phone\": \"ullamco esse id\",\n  \"userStatus\": 29368091\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":username"
													],
													"variable": [
														{
															"key": "username",
															"value": "officia ea irure culpa",
															"description": "(Required) name that need to be updated"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 89814121,\n  \"username\": \"ut sed nostrud veniam\",\n  \"firstName\": \"laboris reprehenderit\",\n  \"lastName\": \"id dolor quis ea\",\n  \"email\": \"anim ea\",\n  \"password\": \"dolor dolore officia\",\n  \"phone\": \"ullamco esse id\",\n  \"userStatus\": 29368091\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/user/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":username"
													],
													"variable": [
														{
															"key": "username",
															"value": "officia ea irure culpa",
															"description": "(Required) name that need to be updated"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "DEL Request",
							"item": [
								{
									"name": "Delete user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "officia ea irure culpa",
													"description": "(Required) The name that needs to be deleted"
												}
											]
										},
										"description": "This can only be done by the logged in user."
									},
									"response": [
										{
											"name": "Invalid username supplied",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/user/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":username"
													],
													"variable": [
														{
															"key": "username",
															"value": "officia ea irure culpa",
															"description": "(Required) The name that needs to be deleted"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/user/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"user",
														":username"
													],
													"variable": [
														{
															"key": "username",
															"value": "officia ea irure culpa",
															"description": "(Required) The name that needs to be deleted"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		}
	]
}